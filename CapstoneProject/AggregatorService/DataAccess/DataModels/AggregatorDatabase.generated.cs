//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : Aggregator
	/// Data Source    : localhost
	/// Server Version : 8.0.25
	/// </summary>
	public partial class AggregatorDB : LinqToDB.Data.DataConnection
	{
		public ITable<Article>     Articles     { get { return this.GetTable<Article>(); } }
		public ITable<Topic>       Topics       { get { return this.GetTable<Topic>(); } }
		public ITable<Topicmap>    Topicmaps    { get { return this.GetTable<Topicmap>(); } }
		public ITable<Userarticle> Userarticles { get { return this.GetTable<Userarticle>(); } }
		public ITable<Userdata>    Userdatas    { get { return this.GetTable<Userdata>(); } }
		public ITable<Usertopic>   Usertopics   { get { return this.GetTable<Usertopic>(); } }

		public AggregatorDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public AggregatorDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public AggregatorDB(LinqToDbConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public AggregatorDB(LinqToDbConnectionOptions<AggregatorDB> options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("article")]
	public partial class Article
	{
		[PrimaryKey, Identity   ] public int       ArticleID             { get; set; } // int
		[Column,        Nullable] public string    ArticleTitle          { get; set; } // varchar(256)
		[Column,        Nullable] public string    ArticleAuthor         { get; set; } // varchar(256)
		[Column,     NotNull    ] public string    ArticleLink           { get; set; } // varchar(256)
		[Column,        Nullable] public DateTime? DatePublished         { get; set; } // datetime
		[Column,        Nullable] public string    ArticleDescription    { get; set; } // varchar(256)
		[Column,        Nullable] public string    AdditionalDescription { get; set; } // varchar(256)
		[Column,        Nullable] public string    ImageUrl              { get; set; } // varchar(256)

		#region Associations

		/// <summary>
		/// userarticle_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="ArticleID", OtherKey="ArticleID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Userarticle> Userarticleibfks { get; set; }

		#endregion
	}

	[Table("topic")]
	public partial class Topic
	{
		[PrimaryKey, Identity] public int    TopicID   { get; set; } // int
		[Column,     Nullable] public string TopicName { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// usertopic_ibfk_2_BackReference
		/// </summary>
		[Association(ThisKey="TopicID", OtherKey="TopicID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Usertopic> Usertopicibfks { get; set; }

		#endregion
	}

	[Table("topicmap")]
	public partial class Topicmap
	{
		[PrimaryKey, Identity] public int    TopicMapID { get; set; } // int
		[Column,     NotNull ] public string MapFrom    { get; set; } // varchar(256)
		[Column,     NotNull ] public string MapTo      { get; set; } // varchar(256)
	}

	[Table("userarticle")]
	public partial class Userarticle
	{
		[PrimaryKey, Identity] public int  UserArticleID   { get; set; } // int
		[Column,     NotNull ] public int  UserID          { get; set; } // int
		[Column,     NotNull ] public int  ArticleID       { get; set; } // int
		[Column,     NotNull ] public bool IsSavedForLater { get; set; } // bit(1)
		[Column,     NotNull ] public bool IsFavorited     { get; set; } // bit(1)

		#region Associations

		/// <summary>
		/// userarticle_ibfk_2
		/// </summary>
		[Association(ThisKey="ArticleID", OtherKey="ArticleID", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="userarticle_ibfk_2", BackReferenceName="Userarticleibfks")]
		public Article Article { get; set; }

		/// <summary>
		/// userarticle_ibfk_1
		/// </summary>
		[Association(ThisKey="UserID", OtherKey="UserID", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="userarticle_ibfk_1", BackReferenceName="Userarticleibfks")]
		public Userdata User { get; set; }

		#endregion
	}

	[Table("userdata")]
	public partial class Userdata
	{
		[PrimaryKey, Identity   ] public int       UserID      { get; set; } // int
		[Column,     NotNull    ] public string    Username    { get; set; } // varchar(256)
		[Column,     NotNull    ] public string    Password    { get; set; } // varchar(256)
		[Column,     NotNull    ] public DateTime  DateCreated { get; set; } // datetime
		[Column,        Nullable] public DateTime? LastLogin   { get; set; } // datetime

		#region Associations

		/// <summary>
		/// userarticle_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="UserID", OtherKey="UserID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Userarticle> Userarticleibfks { get; set; }

		/// <summary>
		/// usertopic_ibfk_1_BackReference
		/// </summary>
		[Association(ThisKey="UserID", OtherKey="UserID", CanBeNull=true, Relationship=LinqToDB.Mapping.Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Usertopic> Usertopicibfks { get; set; }

		#endregion
	}

	[Table("usertopic")]
	public partial class Usertopic
	{
		[PrimaryKey, Identity] public int UserTopicID { get; set; } // int
		[Column,     NotNull ] public int UserID      { get; set; } // int
		[Column,     NotNull ] public int TopicID     { get; set; } // int

		#region Associations

		/// <summary>
		/// usertopic_ibfk_2
		/// </summary>
		[Association(ThisKey="TopicID", OtherKey="TopicID", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="usertopic_ibfk_2", BackReferenceName="Usertopicibfks")]
		public Topic Topic { get; set; }

		/// <summary>
		/// usertopic_ibfk_1
		/// </summary>
		[Association(ThisKey="UserID", OtherKey="UserID", CanBeNull=false, Relationship=LinqToDB.Mapping.Relationship.ManyToOne, KeyName="usertopic_ibfk_1", BackReferenceName="Usertopicibfks")]
		public Userdata User { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Article Find(this ITable<Article> table, int ArticleID)
		{
			return table.FirstOrDefault(t =>
				t.ArticleID == ArticleID);
		}

		public static Topic Find(this ITable<Topic> table, int TopicID)
		{
			return table.FirstOrDefault(t =>
				t.TopicID == TopicID);
		}

		public static Topicmap Find(this ITable<Topicmap> table, int TopicMapID)
		{
			return table.FirstOrDefault(t =>
				t.TopicMapID == TopicMapID);
		}

		public static Userarticle Find(this ITable<Userarticle> table, int UserArticleID)
		{
			return table.FirstOrDefault(t =>
				t.UserArticleID == UserArticleID);
		}

		public static Userdata Find(this ITable<Userdata> table, int UserID)
		{
			return table.FirstOrDefault(t =>
				t.UserID == UserID);
		}

		public static Usertopic Find(this ITable<Usertopic> table, int UserTopicID)
		{
			return table.FirstOrDefault(t =>
				t.UserTopicID == UserTopicID);
		}
	}
}

#pragma warning restore 1591
